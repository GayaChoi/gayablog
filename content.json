{"pages":[{"title":"About GayaChoi","text":".me-img { width: 300px; height: auto; max-width: 100%; margin: 100px 150px; } .under-line { border-bottom: 1px solid black; } 소개 안녕하세요.최우성 이라고 합니다.Gaya라는 필명을 쓰고있고,인도섬 의 명칭에서 따왔습니다.주로 개발쪽 위주로 올리고는 있지만,문화예술 컨텐츠 쪽에 관심이 많아서 미술,만화,애니,영화,책,등 다양하게 포스팅 할 예정입니다.재미있게 봐주세요!감사합니다:)","link":"/about/index.html"}],"posts":[{"title":"[Javascript]함수의 범위(scope)","text":"함수의 범위(scope) 에 대해 알아보도록 하겠습니다!scope 는 “범위” 라는 뜻입니다. 정확히는 프로그래밍 언어에서 생존기간 을 결정하게됩니다.전역범위(global scope) 와 지역범위(local scope) 두 가지로 구분 할 수 있는데 전역범위는 스크립트의 전체에서 참조되는 것을 의미하고,지역범위는 정해진 공간에서만 참조가 가능 한 것을 말합니다. 1234let name = \"gaya\";function say() { alert(name);} 1.전역변수 와 지역변수전역범위 안에 name 이라는 변수 가 정의 되어있습니다.name 은 전역변수(global variable) 라고 정의합니다.전역변수 는 스크립트 의 모든 구역 에서 사용이 가능합니다.window 객체 에 변수를 만들게 됩니다.참고로 window 객체는 전역객체입니다.전역객체는 브라우저의 전체를 담당하는 객체라고 아시면 됩니다.지역범위 안에있는 변수는 지역변수(local variable)가 됩니다.정해진 구역에서만 사용이 가능하답니다. 지역범위 안에 변수가 존재하지 않는다는 것을 알아차리고,전역범위 안에 있는 name 을 참조하게 되어 가져오게 됩니다.따라서 위의 코드 결과는 “gaya”가 출력됩니다. 그렇다면 다음의 소스코드에서 결과 값은 어떻게 될까요? “choigaya” 가 됩니다.지역범위 안에 name 변수가 존재하기 때문이죠.위에서 언급한 범위(scope) 특성을 이해하셨다면 쉬우실것입니다. 123456var name = \"gaya\";function say() { var name = \"choigaya\"; alert(name);}say(); 2.렉시컬스코프렉시컬(lexical) 이란 함수가 선언될 때 참조 하게 되는 특성입니다.정적 스코프(static scope) 라고도 부릅니다.보통 프로그래밍 언어들은 이방식을 따릅니다. 123456789var name = \"gaya\";function f2() { console.log(name);}function f1() { name = \"choigaya\"; f2();}f1(); 위의 코드는 choigaya 가 두 번 출력됩니다.f1함수 가 호출되면서 전역변수 name 의 값을 gaya 에서 choigaya 로 수정 하였기때문이죠.전역변수 name은 f1,f2함수 모두 참조할 수 있습니다. 다음 코드를 보겠습니다. f1 함수가 호출되고,자신의 지역 내부 에 name 을 선언합니다.즉,지역변수를 선언하게됩니다.그후 name 을 호출하게 되고,choigaya 라는 결과 가 출력됩니다.다음으로 f2함수가 실행되지만 아무것도 출력되지 않습니다.왜냐하면 렉시컬 의 특성때문입니다!f2 함수에는 선언과 동시에 자신의 범위에 name 이 존재하지 않으니 전역객체 안의 변수를 찾아보겠지만 없기때문에 아무것도 출력될수 없습니다. 123456789function f1() { var name = \"choigaya\"; console.log(name); f2();}function f2() { console.log(name);}f1(); 3.호이스팅호이스팅(Hoisting)은 ‘끌어올리다’ 라는 의미를 갖고 있습니다.아래의 코드를 보시죠. 123456console.log(value);var value = \"gaya\";hoistingFunc();function hoistingFunc() { console.log(value);} 결과값은 undefined 와 gaya 라는 결과를 얻을 수 있습니다.뭔가 이상하지 않으신가요?보통 프로그래밍 언어 에서는 작동할 수 없는 코드입니다.value 라는 변수를 정의 하기도 전에 데이터를 불러왔기때문이죠.하지만 자바스크립트는 가능합니다.이것이 호이스팅의 특징인데요.함수의 선언문 일경우 에만 끌어올림이 가능합니다. 그렇다면 아래 코드의 결과 값은 어떻게 나오게 될까요? 12345678var value = \"gaya\";function hoistingFunc() { console.log(value); var value = \"choigaya\"; console.log(value); }hoistingFunc(); undefined 와 choigaya 가 출력됩니다.보통 전역변수를 참조하여 gaya 와 choigaya 가 출력 될것이라고 생각하지만 자바스크립트 의 함수선언식 에는 호이스팅 이 적용되기때문에 전혀 다른 결과가 발생합니다.함수표현식에는 적용되지 않습니다.변수에 함수를 초기화 하기 때문이죠.(이점을 주의하셔야됩니다!) 다음 시간에는 실행컨텍스트 와 클로저 그리고 이벤트 루프에 대해 알아보겠습니다.감사합니다!","link":"/2020/04/15/programming-javascript-scope/"}],"tags":[{"name":"Programming","slug":"Programming","link":"/tags/Programming/"},{"name":"Javascript","slug":"Javascript","link":"/tags/Javascript/"},{"name":"web","slug":"web","link":"/tags/web/"}],"categories":[{"name":"Programming","slug":"Programming","link":"/categories/Programming/"},{"name":"Javascript","slug":"Programming/Javascript","link":"/categories/Programming/Javascript/"}]}