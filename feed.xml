<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>GayaBlog</title>
  
  <subtitle>choigaya 의 개발 블로그</subtitle>
  <link href="/feed.xml" rel="self"/>
  
  <link href="https://choigaya.github.io/"/>
  <updated>2020-04-24T16:52:26.260Z</updated>
  <id>https://choigaya.github.io/</id>
  
  <author>
    <name>Gaya Choi</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>[Javascript]함수의 범위(scope)</title>
    <link href="https://choigaya.github.io/2020/04/15/programming-javascript-scope/"/>
    <id>https://choigaya.github.io/2020/04/15/programming-javascript-scope/</id>
    <published>2020-04-15T01:46:02.000Z</published>
    <updated>2020-04-24T16:52:26.260Z</updated>
    
    <content type="html"><![CDATA[<p>  함수의 범위(scope) 에 대해 알아보도록 하겠습니다!scope 는 “범위” 라는 뜻입니다.  정확히는 프로그래밍 언어에서 생존기간 을 결정하게됩니다.전역범위(global scope) 와 지역범위(local scope) 두 가지로 구분 할 수 있는데 전역범위는 스크립트의 전체에서 참조되는 것을 의미하고,지역범위는 정해진 공간에서만 참조가 가능 한 것을 말합니다.</p><a id="more"></a><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">let</span> name = <span class="string">"gaya"</span>;</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">say</span></span>() &#123;</span><br><span class="line">  alert(name);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="scope001.png"><br/></p><h1 id="1-전역변수-와-지역변수"><a href="#1-전역변수-와-지역변수" class="headerlink" title="1.전역변수 와 지역변수"></a>1.전역변수 와 지역변수</h1><p>전역범위 안에 name 이라는 변수 가 정의 되어있습니다.name 은 전역변수(global variable) 라고 정의합니다.전역변수 는 스크립트 의 모든 구역 에서 사용이 가능합니다.window 객체 에 변수를 만들게 됩니다.참고로 window 객체는 전역객체입니다.전역객체는 브라우저의 전체를 담당하는 객체라고 아시면 됩니다.지역범위 안에있는 변수는 지역변수(local variable)가 됩니다.정해진 구역에서만 사용이 가능하답니다.</p><p>지역범위 안에 변수가 존재하지 않는다는 것을 알아차리고,전역범위 안에 있는 name 을 참조하게 되어 가져오게 됩니다.따라서 위의 코드 결과는 “gaya”가 출력됩니다.</p><p>그렇다면 다음의 소스코드에서 결과 값은 어떻게 될까요? “choigaya” 가 됩니다.지역범위 안에 name 변수가 존재하기 때문이죠.위에서 언급한 범위(scope) 특성을 이해하셨다면 쉬우실것입니다. </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">var name = <span class="string">"gaya"</span>;</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">say</span></span>() &#123;</span><br><span class="line">  var name = <span class="string">"choigaya"</span>;</span><br><span class="line">  alert(name);</span><br><span class="line">&#125;</span><br><span class="line">say();</span><br></pre></td></tr></table></figure><p><img src="scope002.png"></br></p><h1 id="2-렉시컬스코프"><a href="#2-렉시컬스코프" class="headerlink" title="2.렉시컬스코프"></a>2.렉시컬스코프</h1><p>렉시컬(lexical) 이란 함수가 선언될 때 참조 하게 되는 특성입니다.정적 스코프(static scope) 라고도 부릅니다.보통 프로그래밍 언어들은 이방식을 따릅니다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">var name = <span class="string">"gaya"</span>;</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">f2</span></span>() &#123;</span><br><span class="line">  console.log(name);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">f1</span></span>() &#123;</span><br><span class="line">  name = <span class="string">"choigaya"</span>;</span><br><span class="line">  f2();</span><br><span class="line">&#125;</span><br><span class="line">f1();</span><br></pre></td></tr></table></figure><p>위의 코드는 choigaya 가 두 번 출력됩니다.f1함수 가 호출되면서 전역변수 name 의 값을 gaya 에서 choigaya 로 수정 하였기때문이죠.전역변수 name은 f1,f2함수 모두 참조할 수 있습니다.</p><p>다음 코드를 보겠습니다. f1 함수가 호출되고,자신의 지역 내부 에 name 을 선언합니다.즉,지역변수를 선언하게됩니다.그후 name 을 호출하게 되고,choigaya 라는 결과 가 출력됩니다.다음으로 f2함수가 실행되지만 아무것도 출력되지 않습니다.왜냐하면 렉시컬 의 특성때문입니다!f2 함수에는 선언과 동시에 자신의 범위에 name 이 존재하지 않으니 전역객체 안의 변수를 찾아보겠지만 없기때문에 아무것도 출력될수 없습니다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">f1</span></span>() &#123;</span><br><span class="line">  var name = <span class="string">"choigaya"</span>;</span><br><span class="line">  console.log(name);</span><br><span class="line">  f2();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">f2</span></span>() &#123;</span><br><span class="line">  console.log(name);</span><br><span class="line">&#125;</span><br><span class="line">f1();</span><br></pre></td></tr></table></figure><h1 id="3-호이스팅"><a href="#3-호이스팅" class="headerlink" title="3.호이스팅"></a>3.호이스팅</h1><p>호이스팅(Hoisting)은 ‘끌어올리다’ 라는 의미를 갖고 있습니다.아래의 코드를 보시죠.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">console.log(value);</span><br><span class="line">var value = <span class="string">"gaya"</span>;</span><br><span class="line">hoistingFunc();</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">hoistingFunc</span></span>() &#123;</span><br><span class="line">  console.log(value);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>결과값은 undefined 와 gaya 라는 결과를 얻을 수 있습니다.뭔가 이상하지 않으신가요?보통 프로그래밍 언어 에서는 작동할 수 없는 코드입니다.value 라는 변수를 정의 하기도 전에 데이터를 불러왔기때문이죠.하지만 자바스크립트는 가능합니다.이것이 호이스팅의 특징인데요.함수의 <strong>선언문</strong> 일경우 에만 끌어올림이 가능합니다.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;
  함수의 범위(scope) 에 대해 알아보도록 하겠습니다!scope 는 “범위” 라는 뜻입니다.
  정확히는 프로그래밍 언어에서 생존기간 을 결정하게됩니다.전역범위(global scope) 와 지역범위(local scope) 두 가지로 구분 할 수 있는데 전역범위는 스크립트의 전체에서 참조되는 것을 의미하고,지역범위는 정해진 공간에서만 참조가 가능 한 것을 말합니다.
&lt;/p&gt;
    
    </summary>
    
    
      <category term="Programming" scheme="https://choigaya.github.io/categories/Programming/"/>
    
      <category term="Javascript" scheme="https://choigaya.github.io/categories/Programming/Javascript/"/>
    
    
      <category term="Programming" scheme="https://choigaya.github.io/tags/Programming/"/>
    
      <category term="Javascript" scheme="https://choigaya.github.io/tags/Javascript/"/>
    
      <category term="web" scheme="https://choigaya.github.io/tags/web/"/>
    
  </entry>
  
</feed>
